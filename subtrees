#!/usr/bin/env bash
# The main purpose of this script is to store a list of the subtree upstreams
# (see the end of the file) and to automatically generate a commit message when
# pulling subtrees.

set -eu -o pipefail

# get OPTS_SPEC from /usr/lib/git-core/git-subtree
eval "$( sed -nEe '/^OPTS_SPEC=/,/^"$/p' "$(git --exec-path)"/git-subtree )"

get_subtree_lines() {
    datafile=$(readlink -f "$0")
    sed -nEe '1,/^__DATA__\s*$/d;p' < "$datafile"
}

extract_from_args() {
    if [ "$#" -eq 0 ]; then
	    set -- -h
    fi
    eval "$(echo "$OPTS_SPEC" | git rev-parse --parseopt --stuck-long -- "$@" || echo exit $?)"

    local opt
    cmd=
    prefix=
    message=
    repo=
    ref=
    while [ "$#" -gt 0 ]; do
        opt="$1"
        shift

        case "$opt" in
            --prefix=*)
                prefix="${opt#--prefix=}"
                prefix="${prefix%/}"
                ;;
            --message=*)
                message="${opt#--message=}"
                ;;
            --)
                break
                ;;
            *)
                ;;
        esac
    done
    cmd="$1"
    repo="$2"
    ref="$3"
}

generate_message() {
    local prefix repo ref
    prefix="$1"
    repo="$2"
    ref="$3"
    echo "$prefix: Pulled new '$ref' from '$repo'"
}

replace_pull_with_add_if_directory_missing() {
    # If prefix directory doesn't exist, replace "git subtree pull" with "git subtree add"
    while read -r line; do
        (
            set -- $line
            local prefix=
            while [ "$#"  -gt 0 ]; do
                case "$1" in
                    --prefix=* )
                        prefix="${opt#--prefix=}"
                        shift
                        break
                        ;;
                    "-P" | "--prefix" )
                        prefix="$2"
                        shift 2
                        ;;
                    *)
                        shift
                        ;;
                esac
            done
            if [ -n "$prefix" ] && ! [ -d "$prefix" ]; then
                echo "$line" | sed -Ee 's/(\s+git\s+subtree\s+)pull(\s)/\1add\2/'
            else
                echo "$line"
            fi
        )
    done | replace_program_name
}

replace_program_name() {
    # Replace ./subtrees with $0 in the output
    ( echo "$0" ; cat ) | sed -nEe '1h;2,${G;s/^(#\s*)?(.*)\n(.*)$/\1\3\n\2/;s/^(.*)\n(\S*)/\1/p}'
}

get_subtree_commands() {
    get_subtree_lines | replace_pull_with_add_if_directory_missing | replace_program_name
}

usage() {
    echo "Usage: $0"
    get_subtree_commands | sed -e 's/^/  or: /'
}


if [ "$#" -gt 0 ] && [ "$1" = "git" ] && [ "$2" = "subtree" ] && [ "$3" = "pull" -o "$3" = "add" ]; then
    shift 2
    extract_from_args $@
    exec git subtree --message="$(generate_message "$prefix" "$repo" "$ref")" "$@"
elif [ "$#" -eq 0 ]; then
    get_subtree_commands
else
    echo "$0: error: invalid arguments"
    usage 2>&1
    exit 2
fi


exit 0

__DATA__
./subtrees git subtree pull --squash -P bundle/ack.vim              https://github.com/mileszs/ack.vim          master
./subtrees git subtree pull --squash -P bundle/cocoa.vim            https://github.com/msanders/cocoa.vim       master
./subtrees git subtree pull --squash -P bundle/QFEnter              https://github.com/yssl/QFEnter             master
./subtrees git subtree pull --squash -P bundle/securemodelines      https://github.com/ciaranm/securemodelines  master
./subtrees git subtree pull --squash -P bundle/tagbar               https://github.com/majutsushi/tagbar        master
./subtrees git subtree pull --squash -P bundle/vim-acpi-asl         https://github.com/martinlroth/vim-acpi-asl master
./subtrees git subtree pull --squash -P bundle/vim-coffee-script    https://github.com/kchmck/vim-coffee-script master
./subtrees git subtree pull --squash -P bundle/vim-emacsmodeline    https://github.com/sfiera/vim-emacsmodeline master
./subtrees git subtree pull --squash -P bundle/Vim-Jinja2-Syntax    https://github.com/Glench/Vim-Jinja2-Syntax master
./subtrees git subtree pull --squash -P bundle/VimOrganizer         https://github.com/hsitz/VimOrganizer       master
./subtrees git subtree pull --squash -P bundle/vim-openscad         https://github.com/sirtaj/vim-openscad      master
./subtrees git subtree pull --squash -P bundle/vim-plist            https://github.com/hunner/vim-plist         master
./subtrees git subtree pull --squash -P bundle/vim-repeat           https://github.com/tpope/vim-repeat         master
./subtrees git subtree pull --squash -P bundle/vim-signify          https://github.com/mhinz/vim-signify        master
./subtrees git subtree pull --squash -P bundle/vimpager             https://github.com/rkitover/vimpager        master
./subtrees git subtree pull --squash -P pack/cespare/start/vim-toml             https://github.com/cespare/vim-toml         master
./subtrees git subtree pull --squash -P pack/gerw/start/vim-HiLinkTrace         https://github.com/gerw/vim-HiLinkTrace     master
./subtrees git subtree pull --squash -P pack/inkarkat/start/vim-ingo-library    https://github.com/inkarkat/vim-ingo-library HEAD
./subtrees git subtree pull --squash -P pack/inkarkat/start/vim-SyntaxRange     https://github.com/inkarkat/vim-SyntaxRange HEAD
./subtrees git subtree pull --squash -P pack/jvirtanen/start/vim-hcl            https://github.com/jvirtanen/vim-hcl        master
./subtrees git subtree pull --squash -P pack/laubzega/start/pruss-vim           https://github.com/laubzega/pruss-vim       HEAD
#./subtrees git subtree pull --squash -P pack/nfnty/start/vim-nftables          https://github.com/nfnty/vim-nftables       master
./subtrees git subtree pull --squash -P pack/nfnty/start/vim-nftables           https://github.com/dlitz/vim-nftables       dev
./subtrees git subtree pull --squash -P pack/tpope/start/vim-sleuth             https://github.com/tpope/vim-sleuth         HEAD
./subtrees git subtree pull --squash -P pack/vendor/start/vim-jq                https://github.com/bfrg/vim-jq              master
./subtrees git subtree pull --squash -P pack/vendor/start/vim-qml               https://github.com/peterhoeg/vim-qml        master
./subtrees git subtree pull --squash -P pack/vendor/start/vim-surround          https://github.com/tpope/vim-surround       master
./subtrees git subtree pull --squash -P pack/vendor/start/vim-zim               https://github.com/jakykong/vim-zim         master
./subtrees git subtree pull --squash -P pack/vendor/start/vim-smali             https://github.com/mzlogin/vim-smali        master
./subtrees git subtree pull --squash -P pack/vendor/start/gcode.vim             https://github.com/wilriker/gcode.vim       master
./subtrees git subtree pull --squash -P pack/vendor/start/taghelper.vim         https://github.com/mgedmin/taghelper.vim    master
./subtrees git subtree pull --squash -P pack/vivien/start/vim-linux-coding-style https://github.com/vivien/vim-linux-coding-style   HEAD
