#!/bin/bash

usage() {
    echo "Usage: $0 [-hH]"
    cat <<'EOF'
Update the subtree bundles.

Options:
  -H                    Use HTTPS instead of SSH to access GitHub
  -h                    display help and exit
  -r PATTERN            Apply only to repos matching PATTERN
EOF
}

repo_pattern=
github_https=
while getopts 'hHr:' opt ; do
    case "$opt" in
    'H')
        github_https=1
        ;;
    'h')
        usage
        exit 0
        ;;
    'r')
        repo_pattern=$OPTARG
        ;;
    '?')
        echo >&2 "Invalid option: -$OPTARG"
        usage >&2
        exit 2
        ;;
    esac
done

repos=(
    git@github.com:yssl/QFEnter
    git@github.com:rking/ag.vim
    git@github.com:msanders/cocoa.vim
    git@github.com:jboning/pyxl
    git@github.com:ciaranm/securemodelines
    git@github.com:majutsushi/tagbar
    git@github.com:kchmck/vim-coffee-script
    git@github.com:sfiera/vim-emacsmodeline
    git@github.com:mhinz/vim-signify
    git@github.com:tpope/vim-surround
    git@github.com:tpope/vim-repeat
    git@github.com:hsitz/VimOrganizer
)

for repo in "${repos[@]}" ; do
    if [ -n "$repo_pattern" ] ; then
        if ! echo "$repo" | grep -q -e "$repo_pattern" ; then
            continue
        fi
    fi
    if [ -n "$github_https" ] ; then
        repo=${repo/git@github.com:/https:\/\/github.com\/}
    fi
    ref=master
    basename=`basename "$repo"`
    prefix="bundle/`basename "$repo"`"
    if [ -d "$prefix" ] ; then
        git subtree pull -P "$prefix" --squash --message "$prefix: Pulled new '$ref' from '$repo'" "$repo" "$ref"
    else
        git subtree add  -P "$prefix" --squash --message "$prefix: Pulled new '$ref' from '$repo'" "$repo" "$ref"
    fi
done

